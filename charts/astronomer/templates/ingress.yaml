################################
## Astronomer Ingress
#################################
{{- if .Values.global.baseDomain }}
{{- if .Values.global.openShift.useRouter }}
{{- range $prefix := (list "" "app." "houston." "registry." "install.") }}
# Route {{ . }}
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: {{ list $.Release.Name "public" (trimSuffix "." $prefix) | compact | join "-" }}
  labels:
    component: public-ingress
    tier: astronomer
    release: {{ $.Release.Name }}
    chart: "{{ $.Chart.Name }}-{{ $.Chart.Version }}"
    heritage: {{ $.Release.Service }}
spec:
  host: {{ $prefix }}{{ $.Values.global.baseDomain }}
  to:
    kind: Service
    name: {{ $.Release.Name }}-nginx
    weight: 100
  wildcardPolicy: None
  {{- if or $.Values.global.acme $.Values.global.tlsSecret }}
  port:
    targetPort: https
  tls:
    termination: passthrough
    insecureEdgeTerminationPolicy: Redirect
  {{- else }}
  port:
    targetPort: http
  {{- end }}
---
{{- end }}
{{- end }}
kind: Ingress
apiVersion: {{ template "apiVersion.Ingress" . }}
metadata:
{{- if .Values.global.openShift.useRouter }}
  name: {{ .Release.Name }}-internal-ingress
  labels:
    component: internal-ingress
    astronomerIngress: internal
{{- else }}
  name: {{ .Release.Name }}-public-ingress
  labels:
    component: public-ingress
{{- end }}
    tier: astronomer
    release: {{ .Release.Name }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    heritage: {{ .Release.Service }}
  annotations:
    kubernetes.io/ingress.class: "{{ .Release.Name }}-nginx"
    kubernetes.io/tls-acme: {{ eq .Values.global.acme true | quote }}
    nginx.ingress.kubernetes.io/custom-http-errors: "404"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      if ($host = '{{ .Values.global.baseDomain }}' ) {
        rewrite ^ https://app.{{ .Values.global.baseDomain }}$request_uri permanent;
      }
{{- if .Values.global.openShift.useRouter }}
    haproxy.router.openshift.io/ip_whitelist: "127.0.0.1/32"
{{- end }}
spec:
  {{- if or .Values.global.tlsSecret .Values.global.acme }}
  tls:
  {{- if .Values.global.acme }}
    - secretName: astronomer-public-tls
  {{- end }}
  {{- if .Values.global.tlsSecret }}
    - secretName: {{ .Values.global.tlsSecret }}
  {{- end }}
      hosts:
        - {{ .Values.global.baseDomain }}
        - app.{{ .Values.global.baseDomain }}
        - houston.{{ .Values.global.baseDomain }}
        - registry.{{ .Values.global.baseDomain }}
        - install.{{ .Values.global.baseDomain }}
  {{- end }}
  rules:
  - host: {{ .Values.global.baseDomain }}
    http:
      paths:
        - path: /
          backend:
            serviceName: {{ .Release.Name }}-astro-ui
            servicePort: astro-ui-http
  - host: app.{{ .Values.global.baseDomain }}
    http:
      paths:
        - path: /
          backend:
            serviceName: {{ .Release.Name }}-astro-ui
            servicePort: astro-ui-http
  - host: houston.{{ .Values.global.baseDomain }}
    http:
      paths:
        - path: /
          backend:
            serviceName: {{ .Release.Name }}-houston
            servicePort: houston-http
  - host: registry.{{ .Values.global.baseDomain }}
    http:
      paths:
        - path: /
          backend:
            serviceName: {{ .Release.Name }}-registry
            servicePort: registry-http
  - host: install.{{ .Values.global.baseDomain }}
    http:
      paths:
        - path: /
          backend:
            serviceName: {{ .Release.Name }}-cli-install
            servicePort: install-http
{{- end }}
